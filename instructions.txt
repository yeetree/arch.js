

----------- MEMORY MAP: ------------

	0 - 511:		INTERRUPT VECTOR TABLE
	512 - 61439: 	WORKING RAM
	61440 - 65535:	BIOS


----------- IO MAP: ------------

	0:		SERIAL PORT
	10:		KEYBOARD PORT
	20:		DISK PORT
	30:		GRAPHICS PORT


------------ REGISTERS: ------------

	0:		F 	- FLAGS
	1:		PC 	- PROGRAM COUNTER
	2:		SP 	- STACK POINTER
	3:		BP 	- BASE POINTER
	4:		I 	- INDEX
	5:		A 	- GP
	6:		B 	- GP
	7:		C 	- GP
	8:		D 	- GP

	9: 	W	- 'WHOOPS' REGISTER (Accident Prevention)

	ANY OTHER REGISTER ADDRESSED WILL BE ROUTED TO W REGISTER

	

------------ FLAGS: ----------------

	S - U - Z - U - P - U - C - U
	U - U - U - U - U - U - U - I

	S: Sign Flag, if last operation resulted in positive or negative (0 = POS, 1 = NEG)
	Z: Zero Flag, if last operation resulted in zero (0 = NOT, 1 = ZERO)
	P: Parity Flag, if last operation resulted in odd or even (0 = ODD, 1 = EVEN)
	C: Carry Flag, if last operation resulted in a carry (0 = NO CARRY, 1 = CARRY)

	I: Interrupt Flag, whether or not CPU accepts interrupts from other devices
	

--------- ARGUMENT TYPES -----------

	0000:	reg16 - register will be chosen by next 8 bits
	0001:	reg8 (h) - register will be chosen by next 8 bits, but modifying high section
	0010:	reg8 (l) - register will be chosen by next 8 bits, but modifying low section
	0011:	imm16 - immediate value will be chosen by next 16 bits
	0100:	imm8 - immediate value will be chosen by next 8 bits

	0101: 	whoops - copies next word to W register and reference to W register (Accident Prevention)
	
	ANY OTHER ARGUMENT TYPE WILL BE ROUTED TO 'whoops' TYPE


------- INSTRUCTION FORMAT: --------

	* First Argument MUST be a register
	* No references to memory

	XXXXXXXX-YYYYZZZZ AAAAAAAA-AAAAAAAA BBBBBBBB-BBBBBBBB
		X: OP CODE
		Y: ARGUMENT 1 TYPE
		Z: ARGUMENT 2 TYPE

		A: ARGUMENT 1 VALUE
		B: ARGUMENT 2 VALUE


--------- INSTRUCTIONS: ------------

	$00:	NOP

	$01:	ADD		DEST : reg16/reg8		SOURCE : ANY
	$02:	ADC		DEST : reg16/reg8		SOURCE : ANY
	$03:	AND		DEST : reg16/reg8		SOURCE : ANY
	$04:	OR		DEST : reg16/reg8		SOURCE : ANY
	$05:	XOR		DEST : reg16/reg8		SOURCE : ANY
	$06:	SUB		DEST : reg16/reg8		SOURCE : ANY
	$07:	SBB		DEST : reg16/reg8		SOURCE : ANY
	$08:	MUL		DEST : reg16/reg8		SOURCE : ANY
	$09:	IMUL	DEST : reg16/reg8		SOURCE : ANY
	$A:		DIV		DEST : reg16/reg8		SOURCE : ANY
	$B:		IDIV	DEST : reg16/reg8		SOURCE : ANY
	$C:		NOT		DEST : reg16/reg8		SOURCE : ANY
	$D:		NEG		DEST : reg16/reg8		SOURCE : ANY
	$E:		INC		DEST : reg16/reg8		SOURCE : ANY
	$F:		DEC		DEST : reg16/reg8		SOURCE : ANY

	$10:	LOAD	ADDRESS : ANY 			SOURCE : ANY
	$11:	STORE	ADDRESS : ANY 			SOURCE : ANY

	$12:	CMP		DEST : reg16/reg8		SOURCE : ANY

	$13:	PUSH	SOURCE : ANY
	$14:	POP		SOURCE : ANY

	$15:	JMP		ADDRESS : ANY
	$16:	JE		ADDRESS : ANY
	$17:	JNE		ADDRESS : ANY
	$18:	JZ		ADDRESS : ANY
	$19:	JNZ		ADDRESS : ANY
	$1A:	JC		ADDRESS : ANY
	$1B:	JNC		ADDRESS : ANY
	$1C:	JO		ADDRESS : ANY
	$1D:	JNO		ADDRESS : ANY

	$1E:	INB		DEST : reg16/reg8		PORT : ANY
	$1F:	INW		DEST : reg16/reg8		PORT : ANY

	$20:	OUTB	DEST : reg16/reg8		PORT : ANY
	$21:	OUTW	DEST : reg16/reg8		PORT : ANY

	$22:	CALL	ADDRESS : ANY
	$23:	RET

	$24:	INT		reg8/imm8